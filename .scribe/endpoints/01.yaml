name: Locations
description: |-

  APIs for managing locations
endpoints:
  -
    httpMethods:
      - GET
    uri: api/locations
    metadata:
      groupName: Locations
      groupDescription: |-

        APIs for managing locations
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      order_by:
        name: order_by
        description: ''
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      search_term:
        name: search_term
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      order_by: architecto
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":3,"country":"Kenya","region":"Nairobi County","city":"Nairobi","postal_code":"00100","latitude":"-1.2921000","longitude":"36.8219000","timezone":"Africa\/Nairobi"},{"id":1,"country":"Kenya","region":"Kiambu","city":"Juja","postal_code":"20100","latitude":"-50.0000000","longitude":"-160.0000000","timezone":"Africa\/Nairobi"}],"status_code":200,"message":"Locations retrieved successfully","succeeded":true}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/locations
    metadata:
      groupName: Locations
      groupDescription: |-

        APIs for managing locations
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      country:
        name: country
        description: 'Must not be greater than 255 characters.'
        required: true
        example: b
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      region:
        name: region
        description: 'Must not be greater than 255 characters.'
        required: false
        example: 'n'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      city:
        name: city
        description: 'Must not be greater than 255 characters.'
        required: false
        example: g
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      postal_code:
        name: postal_code
        description: 'Must not be greater than 50 characters.'
        required: false
        example: z
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      latitude:
        name: latitude
        description: 'Must be between -90 and 90.'
        required: false
        example: -90
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      longitude:
        name: longitude
        description: 'Must be between -180 and 180.'
        required: false
        example: -180
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      timezone:
        name: timezone
        description: 'Must not be greater than 255 characters.'
        required: false
        example: Europe/Dublin
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      country: b
      region: 'n'
      city: g
      postal_code: z
      latitude: -90
      longitude: -180
      timezone: Europe/Dublin
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/locations/{id}'
    metadata:
      groupName: Locations
      groupDescription: |-

        APIs for managing locations
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the location.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: ''
        headers:
          content-type: 'text/html; charset=UTF-8'
          cache-control: 'no-cache, private'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/locations/{id}'
    metadata:
      groupName: Locations
      groupDescription: |-

        APIs for managing locations
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the location.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/locations/{id}'
    metadata:
      groupName: Locations
      groupDescription: |-

        APIs for managing locations
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the location.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
